version: '3.8'

services:
  # Nginx Reverse Proxy para HTTPS
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/nginx/ssl  # Certificados SSL
    depends_on:
      - api
    networks:
      - scandrive-network
    restart: unless-stopped

  api:
    build:
      context: .
      dockerfile: Dockerfile
    # Remove exposição externa das portas (só o nginx vai acessar)
    expose:
      - "80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_FORWARDEDHEADERS_ENABLED=true
      - ConnectionStrings__DefaultConnection=Server=db;Port=3306;Database=scandrive;User=root;Password=${DB_PASSWORD:-scandrive123};
    depends_on:
      db:
        condition: service_healthy
    networks:
      - scandrive-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/api/monitoring/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
      restart_policy:
        condition: on-failure
        max_attempts: 3
        window: 120s

  db:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD:-scandrive123}
      - MYSQL_DATABASE=scandrive
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - scandrive-network
    healthcheck:
      test: ["CMD", "mysql", "-h", "localhost", "-u", "root", "-p${DB_PASSWORD:-scandrive123}", "-e", "SELECT 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
      restart_policy:
        condition: on-failure
        max_attempts: 3
        window: 120s

networks:
  scandrive-network:
    driver: bridge

volumes:
  mysql_data:
